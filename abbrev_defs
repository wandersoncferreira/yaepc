;;-*-coding: utf-8;-*-
(define-abbrev-table 'clojure-mode-abbrev-table
  '(
    ("Require" "require" nil :count 5)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("auhtorization" "authorization" nil :count 0)
    ("conenct" "connect" nil :count 0)
    ("conrtol" "control" nil :count 0)
    ("defautls" "defaults" nil :count 0)
    ("deleating" "deleting" nil :count 0)
    ("didnt" "didn't" nil :count 1)
    ("dont" "don't" nil :count 6)
    ("edting" "editing" nil :count 0)
    ("emas" "emacs" nil :count 2)
    ("excplicitly" "explicitly" nil :count 0)
    ("fmaous" "famous" nil :count 0)
    ("fulfil" "fulfill" nil :count 0)
    ("glag" "flag" nil :count 0)
    ("haev" "have" nil :count 1)
    ("insteaf" "instead" nil :count 0)
    ("leakeage" "leakage" nil :count 0)
    ("libarry" "library" nil :count 0)
    ("optiomal" "optimal" nil :count 0)
    ("poit" "point" nil :count 0)
    ("previos" "previous" nil :count 0)
    ("relly" "really" nil :count 0)
    ("requier" "require" nil :count 0)
    ("reslt" "result" nil :count 0)
    ("seens" "seen" nil :count 0)
    ("simular" "similar" nil :count 0)
    ("suport" "support" nil :count 0)
    ("termonology" "terminology" nil :count 0)
    ("throughtout" "throughout" nil :count 0)
    ("unkown" "unknown" nil :count 2)
    ("valye" "value" nil :count 0)
    ("variearity" "variety" nil :count 0)
    ("verifuing" "verifying" nil :count 0)
    ("wsa" "was" nil :count 0)
   ))

